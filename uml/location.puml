@startuml
hide circle
abstract Location

class Region {
Reference : RegionReference
Area() : number
Intersection(region: Region) : Region
Contains(location : Location) : boolean
}

class Point {
  Latitude : LatitudeType
  Longitude : LongitudeType
  DistanceFrom(point : Point)
}

class Path { 
Length() 
} 

abstract Polygon { 
Area() : number
Intersection(polygon: Polygon) : Polygon
Contains(point : Point)  : boolean
} 

class IncludedPolygon

class ExcludedPolygon

Location <|-- Point

Location <|-- Path

Location <|-- Region

Path o-- "2..* {ordered}" Point : > has

Polygon <|-- IncludedPolygon

Polygon <|-- ExcludedPolygon

Region o-- "1..*" IncludedPolygon : > has

IncludedPolygon o-- "0..*" ExcludedPolygon : > has

Polygon o-- "3..* {ordered} vertex" Point : > has
note right on link
{no straight line between any two consecutive points 
is allowed to cross any other straight line between 
two consecutive points 
or between the first point and the last point}
end note

@enduml